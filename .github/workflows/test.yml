name: Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.2"
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            .venv
            ~/.cache/pre-commit
          key: venv-1
      - run: |
          python -m venv .venv --upgrade-deps
          source .venv/bin/activate
          pip install pre-commit
        if: steps.cache.outputs.cache-hit != 'true'
      - run: |
          source .venv/bin/activate
          pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.2"
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            ~/.local
            .venv
          key: ${{ hashFiles('**/poetry.lock') }}-1
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true
      - run: poetry install --no-interaction --no-root
        if: steps.cache.outputs.cache-hit != 'true'
      - run: source $VENV && pytest main_tests.py --cov-report=xml
      - uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
